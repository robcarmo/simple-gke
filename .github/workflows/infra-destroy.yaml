name: Infrastructure Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  manage-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.0.0'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          
      - name: Check if GCP_SA_KEY is set
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "GCP_SA_KEY is not set"
          else
            echo "GCP_SA_KEY is set"
          fi      

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_environment_variables: true
          create_credentials_file: true

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.GCP_BK_TF }}"
        working-directory: ./infra
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region: ${{ secrets.GCP_REGION }}

      - name: Terraform Plan
        if: ${{ github.event.inputs.action != 'destroy' }}
        run: |
          cd infra
          terraform plan -out=tfplan
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region: ${{ secrets.GCP_REGION }}
          TF_VAR_tfstate_bucket_name: ${{ secrets.GCP_BK_TF }}  

      - name: Terraform Apply
        if: ${{ github.event.inputs.action != 'destroy' }}
        run: |
          cd infra
          terraform apply -auto-approve tfplan
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region: ${{ secrets.GCP_REGION }}
          TF_VAR_tfstate_bucket_name: ${{ secrets.GCP_BK_TF }}  

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: |
          cd infra
          terraform destroy -auto-approve
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region: ${{ secrets.GCP_REGION }}
          TF_VAR_tfstate_bucket_name: ${{ secrets.GCP_BK_TF }}